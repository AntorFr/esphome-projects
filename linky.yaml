substitutions:
  device_name: linky
  friendly_name: Linky

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name} 

esp32:
  board: denky_d4
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: ${device_name}.intra.sberard.fr

  ap:
    ssid: ${device_name}
    password: !secret ap_password

api:
  reboot_timeout: 15min
  encryption:
    key: !secret api_encryption

ota:
  password: !secret ota_password

captive_portal:

logger:
  level: INFO
  logs:
    teleinfo: ERROR

web_server:

#######################################
# Device specific Config Begins Below #
#######################################
packages:
  device_base:
    url: https://github.com/AntorFr/esphome-projects
    file: packages/device_base.yaml

uart:
  id: uart_bus
  rx_pin: GPIO8
  tx_pin: GPIO1
  baud_rate: 1200
  parity: EVEN
  data_bits: 7

teleinfo:
  id: myteleinfo
  update_interval: 5s
  historical_mode: true

time:
  - platform: homeassistant
    timezone: "Europe/Paris"
    id: homeassistant_time

light:
  - platform: neopixelbus
    type: RGB
    variant: SK6812
    pin: GPIO14
    num_leds: 1
    name: "status"
    entity_category: config

#see here for more options: https://gist.github.com/mathieucarbou/886d2a6f5c0b51bb261d6a1329beb08d

sensor:
  # Intensité souscrite
  - platform: teleinfo
    id: int_sousc
    tag_name: "ISOUSC"
    name: "Intensité souscrite"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    icon: mdi:current-ac
    entity_category: diagnostic

  # # Index option Base
  #- platform: teleinfo
  #  tag_name: "BASE"
  #  name: "Linky Index Base"
  #  unit_of_measurement: kWh
  #  device_class: energy
  #  state_class: total_increasing
  #  icon: mdi:flash
  #  accuracy_decimals: 2
  #  filters:
  #    - multiply: 0.001
  
  # Index option HP/HC
  #- platform: teleinfo
  #  tag_name: "HCHC"
  #  name: "Index HC"
  #  unit_of_measurement: kWh
  #  device_class: energy
  #  state_class: total_increasing
  #  icon: mdi:flash
  #  accuracy_decimals: 2
  #  filters:
  #    - multiply: 0.001
  #- platform: teleinfo
  #  tag_name: "HCHP"
  #  name: "Index HP"
  #  unit_of_measurement: kWh
  #  device_class: energy
  #  state_class: total_increasing
  #  icon: mdi:flash
  #  accuracy_decimals: 2
  #  filters:
  #    - multiply: 0.001

  # Index option Tempo
  - platform: teleinfo
    tag_name: "BBRHCJB"
    id: index_bleu_HC
    name: "Index Tempo Bleu HC"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    on_value:
      - script.execute: compute_index_total
  - platform: teleinfo
    tag_name: "BBRHPJB"
    id: index_bleu_HP
    name: "Index Tempo Bleu HP"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    on_value:
      - script.execute: compute_index_total
  - platform: teleinfo
    tag_name: "BBRHCJW"
    id: index_blanc_HC
    name: "Index Tempo Blanc HC"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    on_value:
      - script.execute: compute_index_total
  - platform: teleinfo
    tag_name: "BBRHPJW"
    id: index_blanc_HP
    name: "Index Tempo Blanc HP"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    on_value:
      - script.execute: compute_index_total
  - platform: teleinfo
    tag_name: "BBRHCJR"
    id: index_rouge_HC
    name: "Index Tempo Rouge HC"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    on_value:
      - script.execute: compute_index_total
  - platform: teleinfo
    tag_name: "BBRHPJR"
    id: index_rouge_HP
    name: "Index Tempo Rouge HP"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    on_value:
      - script.execute: compute_index_total
  
  # Index total
  - platform: template
    id: index_total
    name: "Index Total"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    icon: mdi:transmission-tower-export
    accuracy_decimals: 3

  # Intensité Instantanée (monophasé)
  - platform: teleinfo
    tag_name: "IINST"
    name: "Intensité Instantanée"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    icon: mdi:current-ac
    on_value:
      - sensor.template.publish:
          id: puiss_used
          state: !lambda 'return (x*100)/id(int_sousc).state;'

  # Avertissement de Dépassement De Puissance Souscrite
  - platform: teleinfo
    tag_name: "ADPS"
    name: "Intensité Instantanée Dépassement"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    icon: mdi:current-ac
    entity_category: diagnostic

  # Intensité maximale appelée (monophasé)
  - platform: teleinfo
    tag_name: "IMAX"
    name: "Intensité Maximale"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    icon: mdi:current-ac
    entity_category: diagnostic

  # Puissance apparente
  - platform: teleinfo
    tag_name: "PAPP"
    name: "Puissance Apparente"
    unit_of_measurement: VA
    state_class: measurement
    device_class: apparent_power
    icon: mdi:gauge

 # Puissance utilisée
  - platform: template
    id: puiss_used
    name: "Puissance utilisée"
    unit_of_measurement: "%"
    state_class: measurement
    icon: mdi:gauge

 # Prix kwh
  - platform: template
    id: kwh_price
    name: "Prix kWh"
    unit_of_measurement: "€/kWh"
    device_class: monetary
    state_class: measurement
    accuracy_decimals: 4


text_sensor:
  # Adresse du compteur
  #- platform: teleinfo
  #  tag_name: "ADCO"
  #  name: "Adresse"
  #  icon: mdi:information
  #  entity_category: diagnostic
  # Option tarifaire choisie
  #- platform: teleinfo
  #  tag_name: "OPTARIF"
  #  name: "Option Tarifaire"
  #  icon: mdi:information
  #  entity_category: diagnostic
  # Période Tarifaire en cours
  - platform: teleinfo
    tag_name: "PTEC"
    id: raw_price_period
    name: "Période Tarifaire brute"
    internal: true
    filters:
    - substitute:
      - ".. -> "
    on_value:
      - sensor.template.publish:
          id: kwh_price
          state: !lambda |-
           if( x == "HCJB" ) return 0.1056;
           if( x == "HPJB" ) return 0.1369;
           if( x == "HCJW" ) return 0.1246;
           if( x == "HPJW" ) return 0.1654;
           if( x == "HCJR" ) return 0.1328;
           if( x == "HPJV" ) return 0.7324;
    
  - platform: teleinfo
    tag_name: "PTEC"
    name: "Période Tarifaire"
    icon: mdi:information
    filters:
    - substitute:
      - ".. -> "
      - "JB -> "
      - "JR -> "
      - "JW -> "
  - platform: teleinfo
    tag_name: "PTEC"
    name: "Couleur actuelle"
    icon: mdi:information
    filters:
    - substitute:
      - ".. -> "
      - "HC -> "
      - "HP -> "
      - "JB -> bleu"
      - "JW -> blanc"
      - "JR -> rouge"
  # Horaire Heures Pleines Heures Creuses
  #- platform: teleinfo
  #  tag_name: "HHPHC"
  #  name: "Horaire HP/HC"
  #  icon: mdi:information
  #  entity_category: diagnostic
  ## Mot d'état du compteur
  #- platform: teleinfo
  #  tag_name: "MOTDETAT"
  #  name: "Mot d'état"
  #  icon: mdi:information
  ## Présence des potentiels
  #- platform: teleinfo
  #  tag_name: "PPOT"
  #  name: "Présence Potentiels"
  #  icon: mdi:information



script:
  - id: compute_index_total
    mode: restart
    then:
      - sensor.template.publish:
          id: index_total
          state: !lambda |-
            return id(index_bleu_HC).state
             +id(index_bleu_HP).state
             +id(index_blanc_HC).state
             +id(index_blanc_HP).state
             +id(index_rouge_HC).state
             +id(index_rouge_HP).state;
