
substitutions:
  devicename: "nous-a5t"
  icon_switch1: mdi:power
  icon_switch2: mdi:power
  icon_switch3: mdi:power
  icon_usb: mdi:usb-port

esp8266:
  board: esp8285
  restore_from_flash: true

logger:
  baud_rate: 0

uart:
  rx_pin: GPIO3
  baud_rate: 4800

time:
  - platform: homeassistant
    id: homeassistant_time

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO16
      # mode: INPUT_PULLUP
      inverted: True
    id: "button_state0"
    internal: true
    on_press:
      - switch.toggle: button_switch1
      - switch.toggle: button_switch2
      - switch.toggle: button_switch3

sensor:
  #- platform: total_daily_energy
  #  name: "Energie"
  #  power_id: "power_wattage"
  #  filters:
  #    - multiply: 0.001
  #  unit_of_measurement: kWh
  #  accuracy_decimals: 3
  #  icon: mdi:calendar-clock

  # Small buttons over ADC - see https://templates.blakadder.com/nous_A5T.html
  - platform: adc
    pin: VCC
    id: a0_vcc
    update_interval: 1s
    internal: true
    on_value_range:
      - below: 4
        then:
          - lambda: !lambda |-
              if (id(a0_vcc).state > 3) {
                id(relay1).toggle();
              } else if (id(a0_vcc).state <= 3 && id(a0_vcc).state > 2) {
                id(relay2).toggle();
              } else {
                id(relay3).toggle();
              }

  - platform: cse7766
    current:
      name: "Ampere"
      unit_of_measurement: A
      device_class: current
      state_class: measurement
      accuracy_decimals: 3
      icon: mdi:current-ac
      filters:
        - or:
          - throttle: 60s
          - delta: 0.1
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.013
            - 0.061 -> 0.065
            - 0.153 -> 0.1565
            - 5.072 -> 3.1869
            - 6.573 -> 6.7608
        # Make everything below 0.01A appear as just 0A.
        # Furthermore it corrects 0.013A for the power usage of the plug.
        - lambda: if (x < (0.01 - 0.013)) return 0; else return (x - 0.013);
    voltage:
      name: "Volt"
      unit_of_measurement: V
      state_class: measurement
      device_class: voltage
      accuracy_decimals: 1
      icon: mdi:flash-outline
      filters:
        - throttle : 60s
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.0
            - 95.5 -> 230.0
    power:
      name: "Watt"
      unit_of_measurement: W
      state_class: measurement
      device_class: power
      id: "power_wattage"
      icon: mdi:gauge
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 2.2
            - 3.0 -> 15
            - 11.6 -> 36
            - 87 -> 284
            - 274.3 -> 733
            - 569.5 -> 1555
        # Make everything below 2W appear as just 0W.
        # Furthermore it corrects 1.14W for the power usage of the plug.
        - lambda: if (x < (2 + 2.2)) return 0; else return (x - 2.2);
        - or:
          - throttle: 60s
          - delta: 1

    energy:
      name: "Energie"
      unit_of_measurement: kWh
      device_class: energy
      state_class: total_increasing
      accuracy_decimals: 3
      icon: mdi:calendar-clock
      filters:
        - multiply: 0.001
        - or:
          - throttle: 60s
          - delta: 0.1

status_led:
  pin:
    number: GPIO02
    inverted: True
  id: led_blue

switch:
  - platform: template
    name: "Switch 1"
    icon: ${icon_switch1}
    lambda: |-
      if (id(relay1).state) {
        return true;
      } else {
        return false;
      }
    id: button_switch1
    turn_on_action:
      - switch.turn_on: relay1
    turn_off_action:
      - switch.turn_off: relay1
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    name: "Switch 2"
    icon: ${icon_switch2}
    lambda: |-
      if (id(relay2).state) {
        return true;
      } else {
        return false;
      }
    id: button_switch2
    turn_on_action:
      - switch.turn_on: relay2
    turn_off_action:
      - switch.turn_off: relay2
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    name: "Switch 3"
    icon: ${icon_switch3}
    lambda: |-
      if (id(relay3).state) {
        return true;
      } else {
        return false;
      }
    id: button_switch3
    turn_on_action:
      - switch.turn_on: relay3
    turn_off_action:
      - switch.turn_off: relay3
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    name: "Switch USB"
    icon: ${icon_usb}
    lambda: |-
      if (id(relay4).state) {
        return true;
      } else {
        return false;
      }
    id: button_switch4
    turn_on_action:
      - switch.turn_on: relay4
    turn_off_action:
      - switch.turn_off: relay4
    restore_mode: RESTORE_DEFAULT_ON
  - platform: gpio
    pin: GPIO14
    id: relay1
    restore_mode: RESTORE_DEFAULT_ON
  - platform: gpio
    pin: GPIO12
    id: relay2
    restore_mode: RESTORE_DEFAULT_ON
  - platform: gpio
    pin: GPIO13
    id: relay3
    restore_mode: RESTORE_DEFAULT_ON
  - platform: gpio
    pin: GPIO5
    inverted: True
    id: relay4
    restore_mode: RESTORE_DEFAULT_ON